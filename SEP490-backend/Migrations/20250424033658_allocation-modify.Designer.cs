// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sep490_Backend.DTO.ResourceReqs;
using Sep490_Backend.Infra;

#nullable disable

namespace Sep490_Backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20250424033658_allocation-modify")]
    partial class allocationmodify
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConstructionPlanReviewers", b =>
                {
                    b.Property<int>("ReviewedPlanId")
                        .HasColumnType("integer");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("integer");

                    b.HasKey("ReviewedPlanId", "ReviewerId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("ConstructionPlanReviewers", (string)null);
                });

            modelBuilder.Entity("ConstructionTeamPlanItems", b =>
                {
                    b.Property<int>("ConstructionTeamId")
                        .HasColumnType("integer");

                    b.Property<int>("ConstructPlanItemId")
                        .HasColumnType("integer");

                    b.HasKey("ConstructionTeamId", "ConstructPlanItemId");

                    b.HasIndex("ConstructPlanItemId");

                    b.ToTable("ConstructionTeamPlanItems", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("LogType")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("LogType");

                    b.ToTable("ActionLogs", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructPlanItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Dictionary<string, string>>("ItemRelations")
                        .IsRequired()
                        .HasColumnType("hstore");

                    b.Property<string>("ParentIndex")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<string>("WorkCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("EndDate");

                    b.HasIndex("PlanId");

                    b.HasIndex("StartDate");

                    b.HasIndex("WorkCode")
                        .IsUnique()
                        .HasFilter("\"Deleted\" = false");

                    b.HasIndex("ParentIndex", "PlanId");

                    b.HasIndex("PlanId", "Index")
                        .IsUnique()
                        .HasFilter("\"Deleted\" = false");

                    b.ToTable("ConstructPlanItems", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructPlanItemDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("integer");

                    b.Property<string>("WorkCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PlanItemId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ResourceType");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.HasIndex("WorkCode");

                    b.ToTable("ConstructPlanItemDetails", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Advice")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<JsonDocument>("Attachments")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<JsonDocument>("Images")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("LogCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LogName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Progress")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Quality")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<JsonDocument>("Resources")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Safety")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(2);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<JsonDocument>("Weather")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<JsonDocument>("WorkAmount")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("LogCode")
                        .IsUnique();

                    b.HasIndex("LogDate");

                    b.HasIndex("ProjectId");

                    b.ToTable("ConstructionLogs", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Reviewer")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanName");

                    b.HasIndex("ProjectId");

                    b.ToTable("ConstructionPlans", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ConstructionProgresses", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgressItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Dictionary<string, string>>("ItemRelations")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ParentIndex")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("PlanEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PlanStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Progress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("ProgressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<string>("WorkCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProgressId");

                    b.HasIndex("Status");

                    b.HasIndex("WorkCode");

                    b.HasIndex("ProgressId", "Index")
                        .IsUnique()
                        .HasFilter("\"Deleted\" = false");

                    b.ToTable("ConstructionProgressItems", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgressItemDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ProgressItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<string>("WorkCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProgressItemId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ResourceType");

                    b.ToTable("ConstructionProgressItemDetails", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("TeamManager")
                        .HasColumnType("integer");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamManager")
                        .IsUnique()
                        .HasFilter("\"Deleted\" = false");

                    b.HasIndex("TeamName");

                    b.ToTable("ConstructionTeams", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Attachments")
                        .HasColumnType("jsonb");

                    b.Property<string>("ContractCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EstimatedDays")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contracts", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ContractDetail", b =>
                {
                    b.Property<string>("WorkCode")
                        .HasColumnType("text");

                    b.Property<int>("ContractId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ParentIndex")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WorkCode");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractDetails", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DirectorName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.ToTable("EmailTemplates", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.InspectionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Attachment")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("InspectCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("InspectEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("InspectStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("InspectionDecision")
                        .HasColumnType("integer");

                    b.Property<int>("InspectorId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("OtherNote")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<int>("ProgressId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("QualityNote")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InspectorId");

                    b.HasIndex("PlanId");

                    b.HasIndex("ProgressId");

                    b.HasIndex("ProjectId");

                    b.ToTable("InspectionReports");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ChassisNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Inventory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("MadeIn")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("RetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<decimal?>("WholesalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Materials", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<JsonDocument>("Attachments")
                        .HasColumnType("jsonb");

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("ConstructType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Purpose")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TechnicalReqs")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ProjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsCreator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ProjectId", "UserId");

                    b.ToTable("ProjectUsers", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expiry_date");

                    b.Property<bool>("IsRevoked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_revoked");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_refresh_tokens_user_id");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ResourceAllocationReqs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Attachments")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("FromProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("FromTaskId")
                        .HasColumnType("integer");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("integer");

                    b.Property<string>("RequestCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RequestName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("RequestType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<List<RequestDetails>>("ResourceAllocationDetails")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("ToProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("ToTaskId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("FromProjectId");

                    b.HasIndex("FromTaskId");

                    b.HasIndex("RequestCode")
                        .IsUnique()
                        .HasFilter("\"Deleted\" = false");

                    b.HasIndex("RequestType");

                    b.HasIndex("Status");

                    b.HasIndex("ToProjectId");

                    b.HasIndex("ToTaskId");

                    b.HasIndex("Updater");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("ResourceAllocationReqs", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ResourceInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceType")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ResourceType");

                    b.HasIndex("ResourceId", "ProjectId", "ResourceType")
                        .HasFilter("\"Deleted\" = false");

                    b.ToTable("ResourceInventory", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ResourceMobilizationReqs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Attachments")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("RequestCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RequestName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("RequestType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<List<RequestDetails>>("ResourceMobilizationDetails")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RequestCode")
                        .IsUnique()
                        .HasFilter("\"Deleted\" = false");

                    b.HasIndex("RequestDate");

                    b.HasIndex("RequestType");

                    b.HasIndex("Status");

                    b.HasIndex("Updater");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("ResourceMobilizationReqs", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.SiteSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Attachments")
                        .HasColumnType("jsonb");

                    b.Property<double>("BidWinProb")
                        .HasColumnType("double precision");

                    b.Property<int>("BiddingDecision")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<string>("ConstructionRequirements")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("double precision");

                    b.Property<string>("EquipmentRequirements")
                        .HasColumnType("text");

                    b.Property<decimal>("EstimatedExpenses")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("EstimatedProfits")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("FinalProfit")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("HumanResourceCapacity")
                        .HasColumnType("text");

                    b.Property<string>("ProfitAssessment")
                        .HasColumnType("text");

                    b.Property<decimal>("ProjectCost")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("RiskAssessment")
                        .HasColumnType("text");

                    b.Property<string>("SiteSurveyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SurveyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("TenderPackagePrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("TotalBidPrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("SiteSurveys", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PicProfile")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("Email");

                    b.HasIndex("FullName");

                    b.HasIndex("Gender");

                    b.HasIndex("IsVerify");

                    b.HasIndex("Phone");

                    b.HasIndex("TeamId");

                    b.HasIndex("Username");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChassisNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryOfManufacture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Creator")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Driver")
                        .HasColumnType("integer");

                    b.Property<string>("EngineNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FuelTankVolume")
                        .HasColumnType("integer");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FuelUnit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Updater")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Driver")
                        .IsUnique();

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("ConstructionPlanReviewers", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionPlan", null)
                        .WithMany()
                        .HasForeignKey("ReviewedPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConstructionPlanReviewers_ConstructionPlans_ReviewedPlanId");

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConstructionPlanReviewers_Users_ReviewerId");
                });

            modelBuilder.Entity("ConstructionTeamPlanItems", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructPlanItem", null)
                        .WithMany()
                        .HasForeignKey("ConstructPlanItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConstructionTeamPlanItems_ConstructPlanItems_ConstructPlanItemId");

                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionTeam", null)
                        .WithMany()
                        .HasForeignKey("ConstructionTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConstructionTeamPlanItems_ConstructionTeams_ConstructionTeamId");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructPlanItem", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionPlan", "ConstructionPlan")
                        .WithMany("ConstructPlanItems")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructPlanItem", "ParentItem")
                        .WithMany("ChildItems")
                        .HasForeignKey("ParentIndex", "PlanId")
                        .HasPrincipalKey("Index", "PlanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ConstructionPlan");

                    b.Navigation("ParentItem");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructPlanItemDetail", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Material", null)
                        .WithMany("ConstructPlanItemDetails")
                        .HasForeignKey("MaterialId");

                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructPlanItem", "ConstructPlanItem")
                        .WithMany("ConstructPlanItemDetails")
                        .HasForeignKey("PlanItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("ResourceAllocations")
                        .HasForeignKey("UserId");

                    b.HasOne("Sep490_Backend.Infra.Entities.Vehicle", null)
                        .WithMany("ConstructPlanItemDetails")
                        .HasForeignKey("VehicleId");

                    b.Navigation("ConstructPlanItem");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionLog", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionPlan", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany("ConstructionPlans")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgress", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionPlan", "ConstructionPlan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConstructionPlan");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgressItem", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionProgress", "ConstructionProgress")
                        .WithMany("ProgressItems")
                        .HasForeignKey("ProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConstructionProgress");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgressItemDetail", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionProgressItem", "ProgressItem")
                        .WithMany("Details")
                        .HasForeignKey("ProgressItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgressItem");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionTeam", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.User", "Manager")
                        .WithOne()
                        .HasForeignKey("Sep490_Backend.Infra.Entities.ConstructionTeam", "TeamManager")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Contract", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany("Contracts")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ContractDetail", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Contract", "Contract")
                        .WithMany("ContractDetails")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.InspectionReport", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.User", "Inspector")
                        .WithMany()
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionProgress", "Progress")
                        .WithMany()
                        .HasForeignKey("ProgressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inspector");

                    b.Navigation("Plan");

                    b.Navigation("Progress");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Project", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ProjectUser", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.User", "User")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.RefreshToken", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ResourceAllocationReqs", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.User", "Requester")
                        .WithMany()
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "FromProject")
                        .WithMany()
                        .HasForeignKey("FromProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ResourceAllocationReqs_FromProject");

                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "ToProject")
                        .WithMany()
                        .HasForeignKey("ToProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ResourceAllocationReqs_ToProject");

                    b.HasOne("Sep490_Backend.Infra.Entities.User", "Approver")
                        .WithMany()
                        .HasForeignKey("Updater")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("RequestedAllocations")
                        .HasForeignKey("UserId");

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("ApprovedAllocations")
                        .HasForeignKey("UserId1");

                    b.Navigation("Approver");

                    b.Navigation("FromProject");

                    b.Navigation("Requester");

                    b.Navigation("ToProject");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ResourceMobilizationReqs", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.User", "Requester")
                        .WithMany()
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany("ResourceMobilizationReqs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.User", "Approver")
                        .WithMany()
                        .HasForeignKey("Updater")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("RequestedMobilizations")
                        .HasForeignKey("UserId");

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("ApprovedMobilizations")
                        .HasForeignKey("UserId1");

                    b.Navigation("Approver");

                    b.Navigation("Project");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.SiteSurvey", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.Project", "Project")
                        .WithMany("SiteSurveys")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("ApprovedSurveys")
                        .HasForeignKey("UserId");

                    b.HasOne("Sep490_Backend.Infra.Entities.User", null)
                        .WithMany("ConductedSurveys")
                        .HasForeignKey("UserId1");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.User", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.ConstructionTeam", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Vehicle", b =>
                {
                    b.HasOne("Sep490_Backend.Infra.Entities.User", "User")
                        .WithOne("Vehicle")
                        .HasForeignKey("Sep490_Backend.Infra.Entities.Vehicle", "Driver")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructPlanItem", b =>
                {
                    b.Navigation("ChildItems");

                    b.Navigation("ConstructPlanItemDetails");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionPlan", b =>
                {
                    b.Navigation("ConstructPlanItems");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgress", b =>
                {
                    b.Navigation("ProgressItems");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionProgressItem", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.ConstructionTeam", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Contract", b =>
                {
                    b.Navigation("ContractDetails");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Customer", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Material", b =>
                {
                    b.Navigation("ConstructPlanItemDetails");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Project", b =>
                {
                    b.Navigation("ConstructionPlans");

                    b.Navigation("Contracts");

                    b.Navigation("ProjectUsers");

                    b.Navigation("ResourceMobilizationReqs");

                    b.Navigation("SiteSurveys");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.User", b =>
                {
                    b.Navigation("ApprovedAllocations");

                    b.Navigation("ApprovedMobilizations");

                    b.Navigation("ApprovedSurveys");

                    b.Navigation("ConductedSurveys");

                    b.Navigation("ProjectUsers");

                    b.Navigation("RefreshTokens");

                    b.Navigation("RequestedAllocations");

                    b.Navigation("RequestedMobilizations");

                    b.Navigation("ResourceAllocations");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Sep490_Backend.Infra.Entities.Vehicle", b =>
                {
                    b.Navigation("ConstructPlanItemDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
