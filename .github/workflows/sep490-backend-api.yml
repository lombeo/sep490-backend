name: Build and deploy .NET Core application to Web App sep490-backend-api with API Management Service sep490-backend-api-SEP490-backend

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: sep490-backend-api
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: DefaultResourceGroup-SEA
  AZURE_APIM_SERVICENAME: sep490-backend-api
  AZURE_APIM_API_ID: SEP490-backend
  AZURE_APIM_APPSERVICEURL: https://sep490-backend-api.azurewebsites.net
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: ./SEP490-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Cache NuGet packages để tăng tốc độ restore
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}

      # Build solution
      - name: Build solution
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore --no-incremental

      # Run tests
      - name: Run tests
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build --verbosity normal

      # Publish application
      - name: Publish application
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} --verbosity minimal

      # Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Download build artifact
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      # Create environment file for deploy
      - name: Create environment file
        run: |
          cat > ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/.env << 'EOL'
          DATABASE_CONNECTION_STRING=${{ secrets.DATABASE_CONNECTION_STRING }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          JWT_VALID_ISSUER=${{ secrets.JWT_VALID_ISSUER }}
          JWT_VALID_AUDIENCE=${{ secrets.JWT_VALID_AUDIENCE }}
          JWT_CERTIFICATE_PATH=${{ secrets.JWT_CERTIFICATE_PATH }}
          JWT_CERTIFICATE_PASSWORD=${{ secrets.JWT_CERTIFICATE_PASSWORD }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_DRIVE_CREDENTIALS_JSON='${{ secrets.GOOGLE_DRIVE_CREDENTIALS_JSON }}'
          EOL

      # Deploy to Azure WebApp
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.sep490_backend_api_3C11 }}

      # Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.sep490_backend_api_SPN }}

      # Logout from Azure
      - name: Logout from Azure
        run: az logout
